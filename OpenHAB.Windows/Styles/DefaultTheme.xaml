<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:media="http://schemas.microsoft.com/winfx/2006/xaml/presentation">

	<Color x:Key="OpenHABLightOrange">#FFFF5722</Color>
	<Color x:Key="OpenHABLightGrey">#EEEEEE</Color>

	<SolidColorBrush x:Key="OpenHABLightGreyBrush"
					 Color="{StaticResource OpenHABLightGrey}" />
	<SolidColorBrush x:Key="OpenHABLightOrangeBrush"
					 Color="{StaticResource OpenHABLightOrange}" />

	<SolidColorBrush x:Key="OpenHABSplitviewBrush">#344040</SolidColorBrush>
	<SolidColorBrush x:Key="OpenHABLightColor">#C0C0C0</SolidColorBrush>

	<media:AcrylicBrush x:Key="ErrorNotificationBackground"
						BackgroundSource="Backdrop"
						TintOpacity="0.5"
						FallbackColor="{StaticResource SystemAccentColor}"
						TintColor="Red"
						AlwaysUseFallback="False" />

	<media:AcrylicBrush x:Key="NotificationBackground"
						BackgroundSource="Backdrop"
						TintOpacity="0.5"
						FallbackColor="{StaticResource SystemAccentColor}"
						TintColor="Silver"
						AlwaysUseFallback="False" />

	<Style x:Key="NavMenuContainerStyle"
		   TargetType="ListViewItem">
		<Setter Property="FontFamily"
				Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontSize"
				Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="Background"
				Value="{ThemeResource ListViewItemBackground}" />
		<Setter Property="Foreground"
				Value="{ThemeResource ListViewItemForeground}" />
		<Setter Property="TabNavigation"
				Value="Local" />
		<Setter Property="IsHoldingEnabled"
				Value="True" />
		<Setter Property="Padding"
				Value="4,0,12,0" />
		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="MinWidth"
				Value="{ThemeResource ListViewItemMinWidth}" />
		<Setter Property="MinHeight"
				Value="{ThemeResource ListViewItemMinHeight}" />
		<Setter Property="AllowDrop"
				Value="False" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="FocusVisualMargin"
				Value="0" />
		<Setter Property="FocusVisualPrimaryBrush"
				Value="{ThemeResource ListViewItemFocusVisualPrimaryBrush}" />
		<Setter Property="FocusVisualPrimaryThickness"
				Value="2" />
		<Setter Property="FocusVisualSecondaryBrush"
				Value="{ThemeResource ListViewItemFocusVisualSecondaryBrush}" />
		<Setter Property="FocusVisualSecondaryThickness"
				Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListViewItem">
					<!--  Replaced ListViewItemPresenter. See for details: https://msdn.microsoft.com/de-de/library/windows/apps/mt299136.aspx  -->
					<Grid x:Name="ContentBorder"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}">
						<Rectangle x:Name="BorderBackground"
								   Control.IsTemplateFocusTarget="True"
								   Fill="{ThemeResource SystemControlHighlightListAccentLowBrush}"
								   IsHitTestVisible="False"
								   Opacity="0" />
						<Rectangle x:Name="SelectedHighlight"
								   Width="6"
								   HorizontalAlignment="Left"
								   Fill="{StaticResource OpenHABLightOrangeBrush}"
								   IsHitTestVisible="False"
								   Opacity="0" />
						<Grid x:Name="ContentPresenterGrid"
							  Margin="0,0,0,0"
							  Background="Transparent">
							<Grid.RenderTransform>
								<TranslateTransform x:Name="ContentPresenterTranslateTransform" />
							</Grid.RenderTransform>
							<ContentPresenter x:Name="ContentPresenter"
											  Margin="{TemplateBinding Padding}"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											  Content="{TemplateBinding Content}"
											  ContentTemplate="{TemplateBinding ContentTemplate}"
											  ContentTransitions="{TemplateBinding ContentTransitions}" />
						</Grid>
						<!--
							The 'Xg' text simulates the amount of space one line of text will occupy.
							In the DataPlaceholder state, the Content is not loaded yet so we
							approximate the size of the item using placeholder text.
						-->
						<TextBlock x:Name="PlaceholderTextBlock"
								   Margin="{TemplateBinding Padding}"
								   AutomationProperties.AccessibilityView="Raw"
								   Foreground="{x:Null}"
								   IsHitTestVisible="False"
								   Opacity="0"
								   Text="Xg" />
						<Rectangle x:Name="PlaceholderRect"
								   Fill="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
								   Visibility="Collapsed" />
						<Rectangle x:Name="MultiArrangeOverlayBackground"
								   Grid.ColumnSpan="2"
								   Fill="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
								   IsHitTestVisible="False"
								   Opacity="0" />
						<Border x:Name="MultiSelectSquare"
								Width="20"
								Height="20"
								Margin="12,0,0,0"
								HorizontalAlignment="Left"
								VerticalAlignment="Center"
								BorderBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
								BorderThickness="2"
								Visibility="Collapsed">
							<Border.Clip>
								<RectangleGeometry Rect="0,0,20,20">
									<RectangleGeometry.Transform>
										<TranslateTransform x:Name="MultiSelectClipTransform" />
									</RectangleGeometry.Transform>
								</RectangleGeometry>
							</Border.Clip>
							<Border.RenderTransform>
								<TranslateTransform x:Name="MultiSelectCheckBoxTransform" />
							</Border.RenderTransform>
							<FontIcon x:Name="MultiSelectCheck"
									  FontFamily="{ThemeResource SymbolThemeFontFamily}"
									  FontSize="16"
									  Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
									  Glyph="&#xE73E;"
									  Opacity="0"
									  Visibility="Collapsed" />
						</Border>
						<TextBlock x:Name="MultiArrangeOverlayText"
								   Grid.ColumnSpan="2"
								   Margin="18,9,0,0"
								   AutomationProperties.AccessibilityView="Raw"
								   FontFamily="{ThemeResource ContentControlThemeFontFamily}"
								   FontSize="26.667"
								   Foreground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
								   IsHitTestVisible="False"
								   Opacity="0"
								   Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DragItemsCount}"
								   TextTrimming="WordEllipsis"
								   TextWrapping="Wrap" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<Storyboard>
										<PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="BorderBackground"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="BorderBackground"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<PointerDownThemeAnimation TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="SelectedHighlight"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0:0:0" />
										<DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0:0:0" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOverSelected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="SelectedHighlight"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0:0:0" />
										<DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0:0:0" />
										<DoubleAnimation Storyboard.TargetName="BorderBackground"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PressedSelected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="SelectedHighlight"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0:0:0" />
										<DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0:0:0" />
										<DoubleAnimation Storyboard.TargetName="BorderBackground"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<PointerDownThemeAnimation TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DisabledStates">
								<VisualState x:Name="Enabled" />
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ContentBorder"
														 Storyboard.TargetProperty="Opacity"
														 To="{ThemeResource ListViewItemDisabledThemeOpacity}"
														 Duration="0" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="MultiSelectStates">
								<VisualState x:Name="MultiSelectDisabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform"
																	   Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0"
																  Value="0" />
											<SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1"
																  KeyTime="0:0:0.333"
																  Value="-32" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform"
																	   Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0"
																  Value="0" />
											<SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1"
																  KeyTime="0:0:0.333"
																  Value="32" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform"
																	   Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0"
																  Value="32" />
											<SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1"
																  KeyTime="0:0:0.333"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
											<DiscreteObjectKeyFrame KeyTime="0:0:0.333"
																	Value="Collapsed" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MultiSelectEnabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform"
																	   Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0"
																  Value="-32" />
											<SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1"
																  KeyTime="0:0:0.333"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform"
																	   Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0"
																  Value="32" />
											<SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1"
																  KeyTime="0:0:0.333"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform"
																	   Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0"
																  Value="-32" />
											<SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1"
																  KeyTime="0:0:0.333"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterGrid"
																	   Storyboard.TargetProperty="Margin">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="32,0,0,0" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DataVirtualizationStates">
								<VisualState x:Name="DataAvailable" />
								<VisualState x:Name="DataPlaceholder">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ReorderHintStates">
								<VisualState x:Name="NoReorderHint" />
								<VisualState x:Name="BottomReorderHint">
									<Storyboard>
										<DragOverThemeAnimation Direction="Bottom"
																ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
																TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TopReorderHint">
									<Storyboard>
										<DragOverThemeAnimation Direction="Top"
																ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
																TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="RightReorderHint">
									<Storyboard>
										<DragOverThemeAnimation Direction="Right"
																ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
																TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="LeftReorderHint">
									<Storyboard>
										<DragOverThemeAnimation Direction="Left"
																ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
																TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2"
													  To="NoReorderHint" />
								</VisualStateGroup.Transitions>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DragStates">
								<VisualState x:Name="NotDragging" />
								<VisualState x:Name="Dragging">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ContentBorder"
														 Storyboard.TargetProperty="Opacity"
														 To="{ThemeResource ListViewItemDragThemeOpacity}"
														 Duration="0" />
										<DragItemThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DraggingTarget">
									<Storyboard>
										<DropTargetItemThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MultipleDraggingPrimary">
									<Storyboard>
										<!--
											These two Opacity animations are required - the FadeInThemeAnimations
											on the same elements animate an internal Opacity.
										-->
										<DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayBackground"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0" />
										<DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayText"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0" />
										<DoubleAnimation Storyboard.TargetName="ContentBorder"
														 Storyboard.TargetProperty="Opacity"
														 To="{ThemeResource ListViewItemDragThemeOpacity}"
														 Duration="0" />
										<FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground" />
										<FadeInThemeAnimation TargetName="MultiArrangeOverlayText" />
										<DragItemThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MultipleDraggingSecondary">
									<Storyboard>
										<FadeOutThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DraggedPlaceholder">
									<Storyboard>
										<FadeOutThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2"
													  To="NotDragging" />
								</VisualStateGroup.Transitions>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="SplitViewTogglePaneButtonStyle"
		   TargetType="ToggleButton">
		<Setter Property="FontSize"
				Value="20" />
		<Setter Property="FontFamily"
				Value="{ThemeResource SymbolThemeFontFamily}" />
		<Setter Property="MinHeight"
				Value="48" />
		<Setter Property="MinWidth"
				Value="48" />
		<Setter Property="Margin"
				Value="0" />
		<Setter Property="Padding"
				Value="0" />
		<Setter Property="HorizontalAlignment"
				Value="Left" />
		<Setter Property="VerticalAlignment"
				Value="Top" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="Foreground"
				Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
		<Setter Property="Content"
				Value="&#xE700;" />
		<Setter Property="AutomationProperties.Name"
				Value="Menu" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid x:Name="LayoutRoot"
						  Background="{TemplateBinding Background}">
						<ContentPresenter x:Name="ContentPresenter"
										  Margin="{TemplateBinding Padding}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw"
										  Content="{TemplateBinding Content}" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot"
																	   Storyboard.TargetProperty="(Grid.Background)">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{x:Null}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{StaticResource OpenHABLightOrangeBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot"
																	   Storyboard.TargetProperty="(Grid.Background)">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="(TextBlock.Foreground)">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Checked" />
								<VisualState x:Name="CheckedPointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot"
																	   Storyboard.TargetProperty="(Grid.Background)">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedPressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot"
																	   Storyboard.TargetProperty="(Grid.Background)">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedDisabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="(TextBlock.Foreground)">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
